package ProjectModel;
import java.util.Set;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;


@Entity(name = "STUDENTS")
public class Student {
    
    //Primary Key
    
    // Int Justification:
    // int should be enough for student ID's
    // in CSULB student ID's are currently 9 digits long (999,999,999 max)
    // Since max int is around 2bil, we should be fine representing them this way
    @Id
    // Not an autogenerated value since students have an actual campus ID - @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "STUDENT_ID")
    private int studentID;
    
    //Attributes needed
    @NotNull
    @Column(length = 128)
    private String name;

    @ManyToMany(mappedBy = "students")
    private Set<Section> sections;


    @OneToMany(mappedBy = "student")
    private Set<Transcript> transcripts;

    //Bi-Directional adder
    public void addSection(Section s) { 
        this.pushSection(s); 
        s.pushStudent(this); 
    }

    // Helper for addSection
    public void pushSection(Section s){
        this.sections.add(s);
    }

    public double getGPA(){
    
        double totalPoints = 0;
        double totalUnits = 0;
        for(Transcript t: transcripts){

            if(t.getStudent() == this){

                double units = t.getSection().getCourse().getUnits();
                double gradePoints;

                if(t.getGradeEarned() == "A"){
                    gradePoints = 4;
                } 
                else if (t.getGradeEarned() == "B"){
                    gradePoints = 3;
                }
                else if (t.getGradeEarned() == "C"){
                    gradePoints = 2;
                }
                else if (t.getGradeEarned() == "D"){
                    gradePoints = 1;
                }
                else{gradePoints = 0;}

                totalPoints = totalPoints + gradePoints * units;
                totalUnits = totalUnits + units;

            }

            
        }
        double GPA = totalPoints/totalUnits;

        return GPA;
    }

    // Constructor & Accessor / Mutators below
    public Student() {
    }

    public Student(int studentID, String name) {
        this.studentID = studentID;
        this.name = name;
    }


    public int getStudentID() {
        return this.studentID;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Set<Section> getSections() {
        return this.sections;
    }

    public void setSections(Set<Section> sections) {
        this.sections = sections;
    }

    @Override
    public String toString() {
        return getName() + ", ID: "
            + getStudentID();
    }


}
